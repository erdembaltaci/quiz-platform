{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cirim\\\\Desktop\\\\okul 3.s\\u0131n\\u0131f\\\\NodeJS\\\\quiz-platform\\\\frontend\\\\src\\\\pages\\\\QuizSession.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst QuizSession = ({ quizId }) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const socket = io('http://localhost:5000'); // Backend URL\r\n\r\n  useEffect(() => {\r\n    // Quiz oturumuna katıl\r\n    socket.emit('joinQuiz', quizId);\r\n\r\n    // Yeni soru geldiğinde\r\n    socket.on('newQuestion', (question) => {\r\n      setCurrentQuestion(question);\r\n    });\r\n\r\n    // Skor güncellemesi\r\n    socket.on('scoreUpdate', (scores) => {\r\n      setLeaderboard(scores);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect(); // Component kaldırıldığında bağlantıyı kes\r\n    };\r\n  }, [quizId]);\r\n\r\n  const handleAnswer = (selectedOption) => {\r\n    socket.emit('submitAnswer', {\r\n      quizId,\r\n      questionIndex: currentQuestion.index,\r\n      answer: selectedOption\r\n    });\r\n    // src/pages/QuizSession.js\r\n    socket.emit('startQuiz', quizId);\r\n    socket.on('newQuestion', (question) => {\r\n      setCurrentQuestion(question);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{currentQuestion?.text}</h2>\r\n      {currentQuestion?.options.map((option, index) => (\r\n        <button key={index} onClick={() => handleAnswer(index)}>\r\n          {option}\r\n        </button>\r\n      ))}\r\n      <h3>Skor Tablosu</h3>\r\n      {leaderboard.map((user, index) => (\r\n        <div key={user.id}>{index + 1}. {user.name}: {user.score}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizSession;\r\n*/\n\n/*\r\n// src/pages/QuizSession.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst QuizSession = () => {\r\n  const { quizId } = useParams();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n\r\n  // QuizSession.js içinde\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:5000');\r\n    socket.emit('joinQuiz', quizId);\r\n    socket.on('participantUpdate', (data) => {\r\n      console.log(`Aktif katılımcı sayısı: ${data.count}`);\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, [quizId]);\r\n\r\n  return (\r\n    <div className=\"quiz-session\">\r\n      <h2>{quiz?.title}</h2>\r\n      {currentQuestion ? (\r\n        <div className=\"question-container\">\r\n          <h3>{currentQuestion.text}</h3>\r\n          {Seçenekler ve zamanlayıcı buraya }\r\n        </div>\r\n      ) : (\r\n        <button onClick={() => setCurrentQuestion(quiz.questions[0])}>\r\n          Quiz'i Başlat\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizSession;\r\n*/\n\n// src/pages/QuizSession.js\nconst QuizSession = () => {\n  _s();\n  var _quiz;\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const handleAnswerSubmit = selectedAnswer => {\n    // Socket.io ile cevabı backend'e gönder\n    socket.emit('submitAnswer', {\n      quizId,\n      questionIndex: currentQuestionIndex,\n      answer: selectedAnswer\n    });\n\n    // Sonraki soruya geç\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // Quiz tamamlandı\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: ((_quiz = quiz) === null || _quiz === void 0 ? void 0 : _quiz.questions[currentQuestionIndex]) && /*#__PURE__*/_jsxDEV(QuestionComponent, {\n      question: quiz.questions[currentQuestionIndex],\n      onAnswerSubmit: handleAnswerSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizSession, \"/TKtEVk4bXISO4WPmKbHy0C8rGs=\");\n_c = QuizSession;\nexport default QuizSession;\nvar _c;\n$RefreshReg$(_c, \"QuizSession\");","map":{"version":3,"names":["QuizSession","_s","_quiz","currentQuestionIndex","setCurrentQuestionIndex","useState","handleAnswerSubmit","selectedAnswer","socket","emit","quizId","questionIndex","answer","quiz","questions","length","_jsxDEV","className","children","QuestionComponent","question","onAnswerSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cirim/Desktop/okul 3.sınıf/NodeJS/quiz-platform/frontend/src/pages/QuizSession.js"],"sourcesContent":["\r\n/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst QuizSession = ({ quizId }) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const socket = io('http://localhost:5000'); // Backend URL\r\n\r\n  useEffect(() => {\r\n    // Quiz oturumuna katıl\r\n    socket.emit('joinQuiz', quizId);\r\n\r\n    // Yeni soru geldiğinde\r\n    socket.on('newQuestion', (question) => {\r\n      setCurrentQuestion(question);\r\n    });\r\n\r\n    // Skor güncellemesi\r\n    socket.on('scoreUpdate', (scores) => {\r\n      setLeaderboard(scores);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect(); // Component kaldırıldığında bağlantıyı kes\r\n    };\r\n  }, [quizId]);\r\n\r\n  const handleAnswer = (selectedOption) => {\r\n    socket.emit('submitAnswer', {\r\n      quizId,\r\n      questionIndex: currentQuestion.index,\r\n      answer: selectedOption\r\n    });\r\n    // src/pages/QuizSession.js\r\n    socket.emit('startQuiz', quizId);\r\n    socket.on('newQuestion', (question) => {\r\n      setCurrentQuestion(question);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{currentQuestion?.text}</h2>\r\n      {currentQuestion?.options.map((option, index) => (\r\n        <button key={index} onClick={() => handleAnswer(index)}>\r\n          {option}\r\n        </button>\r\n      ))}\r\n      <h3>Skor Tablosu</h3>\r\n      {leaderboard.map((user, index) => (\r\n        <div key={user.id}>{index + 1}. {user.name}: {user.score}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizSession;\r\n*/\r\n\r\n/*\r\n// src/pages/QuizSession.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst QuizSession = () => {\r\n  const { quizId } = useParams();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n\r\n  // QuizSession.js içinde\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:5000');\r\n    socket.emit('joinQuiz', quizId);\r\n    socket.on('participantUpdate', (data) => {\r\n      console.log(`Aktif katılımcı sayısı: ${data.count}`);\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, [quizId]);\r\n\r\n  return (\r\n    <div className=\"quiz-session\">\r\n      <h2>{quiz?.title}</h2>\r\n      {currentQuestion ? (\r\n        <div className=\"question-container\">\r\n          <h3>{currentQuestion.text}</h3>\r\n          {Seçenekler ve zamanlayıcı buraya }\r\n        </div>\r\n      ) : (\r\n        <button onClick={() => setCurrentQuestion(quiz.questions[0])}>\r\n          Quiz'i Başlat\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizSession;\r\n*/\r\n\r\n// src/pages/QuizSession.js\r\nconst QuizSession = () => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  \r\n  const handleAnswerSubmit = (selectedAnswer) => {\r\n    // Socket.io ile cevabı backend'e gönder\r\n    socket.emit('submitAnswer', {\r\n      quizId,\r\n      questionIndex: currentQuestionIndex,\r\n      answer: selectedAnswer\r\n    });\r\n    \r\n    // Sonraki soruya geç\r\n    if (currentQuestionIndex < quiz.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      // Quiz tamamlandı\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {quiz?.questions[currentQuestionIndex] && (\r\n        <QuestionComponent \r\n          question={quiz.questions[currentQuestionIndex]}\r\n          onAnswerSubmit={handleAnswerSubmit}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n export default QuizSession;"],"mappingsxB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAEnE,MAAMC,kBAAkB,GAAIC,cAAc,IAAK;IAC7C;IACAC,MAAM,CAACC,IAAI,CAAC,cAAc,EAAE;MAC1BC,MAAM;MACNC,aAAa,EAAER,oBAAoB;MACnCS,MAAM,EAAEL;IACV,CAAC,CAAC;;IAEF;IACA,IAAIJ,oBAAoB,GAAGU,IAAI,CAACC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;MACpDX,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD,CAAC,MAAM;MACL;IAAA;EAEJ,CAAC;EAED,oBACEa,OAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5B,EAAAhB,KAAA,GAAAW,IAAI,cAAAX,KAAA,uBAAJA,KAAA,CAAMY,SAAS,CAACX,oBAAoB,CAAC,kBACpCa,OAAA,CAACG,iBAAiB;MAChBC,QAAQ,EAAEP,IAAI,CAACC,SAAS,CAACX,oBAAoB,CAAE;MAC/CkB,cAAc,EAAEf;IAAmB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7BID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA8BhB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}